<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path"	default="$(find rosplan_experiment_pddl)/pddl/experiment_domain.pddl" />
	<arg name="problem_path"	default="$(find rosplan_demos)/common/experiment_problem.pddl" />



 <arg name="use_problem_topic"    default="true" />
	<arg name="problem_topic"        default="/rosplan_problem_interface/problem_instance" />
	<arg name="planner_topic"        default="planner_output" /> 
	<arg name="data_path"            default="$(find rosplan_experiment_pddl)/common/" />
	<arg name="planner_command"      default="$timeout 10 $(find rosplan_planning_system)/common/bin/Contingent-FF -o DOMAIN -f PROBLEM"  />
<param name="strl_file_path" value="$(find rosplan_experiment_pddl)/common/plan.strl" />
 
		<param name="generate_default_problem" value="False" />
		<param name="max_dispatch_attempts" value="2" />

<!--

	<node name="observe_can_server"
	    pkg="plps_launcher"
	    type="observe_can_server.py"
	    output="screen"/>

	<node name="move_to_point_server"
	    pkg="plps_launcher"
	    type="move_to_point_server.py"
	    output="screen"/>

	<node name="pick_server"
	    pkg="plps_launcher"
	    type="pick_server.py"
	    output="screen"/>

	<node name="dispatcher"
	    pkg="plps_launcher"
	    type="dispatcher.py"
	    output="screen"/>
-->


	<!-- ROSPlan 
	<include file="$(find rosplan_planning_system)/launch/interfaced_planning_system.launch" >
		<arg name="domain_path"		value="$(arg domain_path)" />
		<arg name="problem_path"	value="$(arg problem_path)" />
	</include> -->


<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="true" />
	</node>
	

 <!-- problem generation -->
  <include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
    <arg name="knowledge_base"   value="rosplan_knowledge_base" />
    <arg name="domain_path"      value="$(arg domain_path)" />
    <!-- problem_path: pddl problem will be automatically generated and placed in this location -->
    <arg name="problem_path"     value="$(arg problem_path)" />
    <arg name="problem_topic"    value="problem_instance" />
  </include>


<!-- planner interface -->
	<node name="rosplan_planner_interface" pkg="rosplan_planning_system" type="ff_planner_interface" respawn="false" output="screen">

		<!-- read problem from topic (instead of from file) -->
		<param name="use_problem_topic" value="$(arg use_problem_topic)" />

		<!-- ros topics -->
		<param name="problem_topic" value="$(arg problem_topic)" />
		<param name="planner_topic" value="$(arg planner_topic)" />

		<!-- directory for files -->
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<param name="data_path" value="$(arg data_path)" />

		<!-- to run the planner -->
		<!-- planner command replaces strings 'DOMAIN' and 'PROBLEM' with paths -->
		<param name="planner_command" value="$(arg planner_command)" />
	</node>


 




	<!-- plan parsing -->
	<include file="$(find rosplan_planning_system)/launch/includes/parsing_interface.launch">
		<arg name="knowledge_base"   value="rosplan_knowledge_base" />
		<arg name="planner_topic"    value="/rosplan_planner_interface/planner_output" />
		<arg name="plan_topic"       value="complete_plan" />
	</include>

	<!-- plan dispatch -->
	<include file="$(find rosplan_planning_system)/launch/includes/dispatch_interface.launch">
		<arg name="knowledge_base"           value="rosplan_knowledge_base" />
		<arg name="plan_topic"               value="/rosplan_parsing_interface/complete_plan" />
		<arg name="action_dispatch_topic"    value="action_dispatch" />
		<arg name="action_feedback_topic"    value="action_feedback" />
	</include>




	<!-- sim actions -->
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="pick_unknown" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="place_unknown" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="robot_navigation" />
	</include>
	<include file="$(find rosplan_planning_system)/launch/includes/simulated_action.launch" >
		<arg name="pddl_action_name" value="sense_object" />
	</include>

</launch>
 
